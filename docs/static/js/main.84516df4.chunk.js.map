{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAe5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,OAOd,2BACAO,KAAK,OACLC,MAAOT,EACPU,SAjBiB,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,Y,uBCNjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAWH,GAD9C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAcbM,GAda,4CAAH,sDCCRO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,yBAAKc,UAAU,QACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCDHO,EAAS,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,SAAe,ECFX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAW,WACPxB,EAAQC,GACPwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGlB,CAACpB,IAEIqB,EDZuBK,CAAa1B,GAA/Ba,EAHuB,EAG5BN,KAAYa,EAHgB,EAGhBA,QAInB,OACI,oCACI,wBAAIJ,UAAU,uBAAuBhB,GAEpCoB,GAAW,sCACZ,yBAAKJ,UAAU,kCAGPH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAiB,IAAKjB,EAAIC,IACLD,UEnBfkB,EAAe,WAAO,IAAD,EAEG1C,mBAAS,CAAC,gBAFb,mBAEvB2C,EAFuB,KAEZ5C,EAFY,KAQ9B,OACI,oCAEI,wBAAI+B,UAAU,oBAAd,gBACA,kBAAC,EAAD,CAAa/B,cAAeA,IAC5B,6BACA,4BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACA2B,IAAK3B,EACLA,SAAUA,UChBlC8B,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.84516df4.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange= (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length>0){\r\n            setCategories(cats=>[inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=gQJ8XFxBCNYuaQLqmFUoTa3f8bDfxkVQ`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    } )\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid= ({category})  => {\r\n\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    \r\n\r\n   \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__fadeInLeft\">{category}</h3>\r\n            \r\n            {loading && <p>loading</p>}\r\n            <div className=\"card-grid animate__slideInDown\">\r\n                \r\n                {\r\n                    images.map( img=> (\r\n                        <GifGridItem\r\n                        key={img.id}  \r\n                        {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( ()=> {\r\n        getGifs(category)\r\n        .then(imgs=>{\r\n            setstate({\r\n                data:imgs,\r\n                loading:false\r\n            });\r\n        })\r\n    },[category])\r\n\r\n    return state;\r\n}\r\n","import React,{useState} from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categories,setCategories]=useState(['Dragon ball']);\r\n\r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        <>\r\n            \r\n            <h1 className=\"animate__flipInX\">GifExpertApp</h1>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n            \r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { GifExpertApp } from './components/GifExpertApp';\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}